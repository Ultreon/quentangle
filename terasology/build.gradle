plugins {
    id 'multiloader-game'
}

repositories {
    google()
    maven { url "https://maven.fabricmc.net/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/releases/' }
    maven { url 'https://artifactory.terasology.io/artifactory/virtual-repo-live' }
    maven { url 'https://artifactory.terasology.io/artifactory/terasology-snapshot-local' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/public/' }
}

dependencies {
    implementation "org.terasology.engine:engine:5.3.0"
    implementation "net.fabricmc:sponge-mixin:0.15.3+mixin.0.8.7"
    implementation "net.fabricmc:access-widener:2.1.0"
    implementation "net.fabricmc:fabric-loader:0.16.14"
    implementation 'org.jetbrains:annotations:15.0'
}

mkdir 'run'

tasks.register("runClient", JavaExec) {
    dependsOn classes
    mainClass = "net.fabricmc.loader.impl.launch.knot.KnotClient"
    classpath = sourceSets.main.runtimeClasspath + sourceSets.main.output + rootProject.project('terasology-fabric').configurations.runtimeClaspath

    jvmArgs "-Dfabric.development=true", "-Dfabric.skipMcProvider=true"

    workingDir = file("run")
}

tasks.register("runServer", JavaExec) {
    dependsOn classes
    mainClass = "net.fabricmc.loader.impl.launch.knot.KnotServer"
    classpath = sourceSets.main.runtimeClasspath + sourceSets.main.output

    workingDir = file("run")
}
